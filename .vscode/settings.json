{
    // Python 配置
    "python.defaultInterpreterPath": "./venv/Scripts/python.exe",
    "python.terminal.activateEnvironment": true,
    "python.linting.enabled": true,
    
    // Flake8 配置
    "python.linting.flake8Enabled": true,
    "python.linting.flake8Args": [
        "--max-line-length=88",
        "--extend-ignore=E203,W503",
        "--max-complexity=10"
    ],
    
    // MyPy 配置
    "python.linting.mypyEnabled": true,
    "python.linting.mypyArgs": [
        "--ignore-missing-imports",
        "--no-strict-optional",
        "--show-error-codes"
    ],
    
    // Bandit 配置
    "python.linting.banditEnabled": true,
    "python.linting.banditArgs": [
        "-x", "tests/"
    ],
    
    // Black 格式化配置
    "python.formatting.provider": "black",
    "python.formatting.blackArgs": [
        "--line-length=88"
    ],
    
    // isort 配置
    "python.sortImports.args": [
        "--profile=black",
        "--line-length=88"
    ],
    
    // 自动格式化
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true,
    "editor.formatOnType": false,
    
    // 自动保存时运行操作
    "editor.codeActionsOnSave": {
        "source.organizeImports": true,
        "source.fixAll": true
    },
    
    // 测试配置
    "python.testing.pytestEnabled": true,
    "python.testing.unittestEnabled": false,
    "python.testing.pytestArgs": [
        "tests",
        "-v"
    ],
    
    // 文件关联
    "files.associations": {
        "*.yml": "yaml",
        "*.yaml": "yaml",
        "Dockerfile*": "dockerfile",
        "docker-compose*.yml": "yaml",
        "docker-compose*.yaml": "yaml"
    },
    
    // 排除文件
    "files.exclude": {
        "**/__pycache__": true,
        "**/*.pyc": true,
        "**/.pytest_cache": true,
        "**/.mypy_cache": true,
        "**/.ruff_cache": true,
        "**/htmlcov": true,
        "**/.coverage": true,
        "**/bandit-report.json": true
    },
    
    // 搜索排除
    "search.exclude": {
        "**/node_modules": true,
        "**/bower_components": true,
        "**/*.code-search": true,
        "**/__pycache__": true,
        "**/.pytest_cache": true,
        "**/.mypy_cache": true,
        "**/.ruff_cache": true,
        "**/htmlcov": true,
        "**/venv": true,
        "**/.venv": true
    },
    
    // 监视排除
    "files.watcherExclude": {
        "**/.git/objects/**": true,
        "**/.git/subtree-cache/**": true,
        "**/node_modules/*/**": true,
        "**/__pycache__/**": true,
        "**/.pytest_cache/**": true,
        "**/.mypy_cache/**": true,
        "**/.ruff_cache/**": true,
        "**/htmlcov/**": true,
        "**/venv/**": true,
        "**/.venv/**": true
    },
    
    // 编辑器配置
    "editor.rulers": [88],
    "editor.tabSize": 4,
    "editor.insertSpaces": true,
    "editor.trimAutoWhitespace": true,
    
    // Python 特定配置
    "[python]": {
        "editor.defaultFormatter": "ms-python.black-formatter",
        "editor.tabSize": 4,
        "editor.insertSpaces": true,
        "editor.codeActionsOnSave": {
            "source.organizeImports": true
        }
    },
    
    // YAML 配置
    "[yaml]": {
        "editor.tabSize": 2,
        "editor.insertSpaces": true
    },
    
    // JSON 配置
    "[json]": {
        "editor.tabSize": 2,
        "editor.insertSpaces": true
    },
    
    // Markdown 配置
    "[markdown]": {
        "editor.tabSize": 2,
        "editor.insertSpaces": true,
        "editor.wordWrap": "on"
    },
    
    // Git 配置
    "git.ignoreLimitWarning": true,
    "git.autofetch": true,
    
    // 终端配置
    "terminal.integrated.defaultProfile.windows": "PowerShell",
    "terminal.integrated.env.windows": {
        "PYTHONPATH": "${workspaceFolder}"
    },
    
    // 扩展推荐
    "extensions.showRecommendationsOnlyOnDemand": false,
    
    // 工作区特定设置
    "python.analysis.extraPaths": [
        "./app",
        "./tests"
    ],
    
    // 调试配置
    "python.analysis.autoImportCompletions": true,
    "python.analysis.typeCheckingMode": "basic",
    
    // 代码覆盖率
    "coverage-gutters.coverageFileNames": [
        "coverage.xml",
        "coverage.lcov",
        "cov.xml",
        "coverage.json"
    ],
    "coverage-gutters.showLineCoverage": true,
    "coverage-gutters.showRulerCoverage": true,
    
    // Docker 配置
    "docker.defaultRegistryPath": "",
    
    // 其他有用的设置
    "editor.minimap.enabled": true,
    "editor.minimap.maxColumn": 88,
    "workbench.editor.enablePreview": false,
    "explorer.confirmDelete": false,
    "explorer.confirmDragAndDrop": false
}